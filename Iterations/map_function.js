//map function acts similar to forEach method syntactically but it returns a new array with the same length as original one but eah element modified according to the callback function

const arr=[1,2,3,4,5,6,7,8,9]
let var1=arr.map((items)=>{
    console.log(items);
    return items*2
})
console.log(var1);
//whether return statement is given or not the output will be a same sized array as that of the original one and if nthing is returned the array will return all undefined values as per the number of elements in the original one.

//mostly it has the purpose of modifying the array elements while the filter function serves to filter certain elements based on some condition


const books = [
    { title: 'Book One', genre: 'Fiction', publish: 1981, edition: 2004 },
    { title: 'Book Two', genre: 'Non-Fiction', publish: 1992, edition: 2008 },
    { title: 'Book Three', genre: 'History', publish: 1999, edition: 2007 },
    { title: 'Book Four', genre: 'Non-Fiction', publish: 1989, edition: 2010 },
    { title: 'Book Five', genre: 'Science', publish: 2009, edition: 2014 },
    { title: 'Book Six', genre: 'Fiction', publish: 1987, edition: 2010 },
    { title: 'Book Seven', genre: 'History', publish: 1986, edition: 1996 },
    { title: 'Book Eight', genre: 'Science', publish: 2011, edition: 2016 },
    { title: 'Book Nine', genre: 'Non-Fiction', publish: 1981, edition: 1989 },
  ];

  const historyBooks=books.filter((items)=>items.genre=='History').map((items)=>items.title)//this is called chaining where I have applied multiple functions on the array books, so first I have fetched the entire objects where genre is history and then on those filtered objects I have applied map function to filter only their titles

  console.log(historyBooks);

  //in chaining every method acts on the result generated by the previous function in the chain and not on the original object
  
